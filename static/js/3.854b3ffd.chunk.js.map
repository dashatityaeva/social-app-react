{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","st","dialog","dialogActive","to","name","Message","message","text","maxLength15","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogElements","dialogs","map","d","messageElements","messages","m","dialogsItems","values","messageText","newMessageBody","sendMessage","DialogsContainer","compose","connect","dispatch","sendMessageActionCreater","withAuthRedirect"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,aAAe,gC,4GCYvIC,EAVI,SAACC,GAChB,IAAIC,EAAOD,EAAME,GAEjB,OACI,qBAAKC,UAAWC,IAAGC,OAAS,IAAMD,IAAGE,aAArC,SACI,cAAC,IAAD,CAASC,GAAE,oBAAeN,GAA1B,SAAmCD,EAAMQ,U,oCCFtCC,EAJC,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAGM,QAAnB,SAA6BV,EAAMW,Q,iCC+B1CC,EAAcC,YAAiB,IAY7BC,EAAmBC,YAAU,CAACC,KAAM,qBAAjBD,EAVL,SAACf,GACjB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOX,KAAK,iBAAiBY,UAAWC,IACxCC,SAAU,CAACC,IAAUX,GAAcY,YAAY,sBAC/C,gDAOGC,EAxCC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBvB,KAAMuB,EAAEvB,KAAMN,GAAI6B,EAAE7B,IAA1B6B,EAAE7B,OAC3D8B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAK,cAAC,EAAD,CAASvB,KAAMuB,EAAEvB,UAOhE,OACI,sBAAKR,UAAWC,IAAGyB,QAAnB,UACI,qBAAK1B,UAAWC,IAAG+B,aAAnB,SACKP,IAEL,sBAAKzB,UAAWC,IAAG6B,SAAnB,UACI,8BACKD,IAEL,cAAClB,EAAD,CAAkBG,SAdV,SAACmB,GACjB,IAAIC,EAAcD,EAAOE,eACzBtC,EAAMuC,YAAYF,a,uBCMpBG,EAAmBC,YACrBC,aAjBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHJ,YAAa,SAACF,GACVM,EAASC,YAAyBP,SAS1CQ,IAFqBJ,CAEHhB,GAEPe","file":"static/js/3.854b3ffd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1R8Jv\",\"dialogsItems\":\"Dialogs_dialogsItems__IdkPG\",\"messages\":\"Dialogs_messages__qlG0Y\",\"dialogActive\":\"Dialogs_dialogActive__300K6\"};","import { NavLink } from 'react-router-dom'\r\nimport st from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = props.id;\r\n\r\n    return (\r\n        <div className={st.dialog + ' ' + st.dialogActive}>\r\n            <NavLink to={`/messages/${path}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import st from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={st.message}>{props.text}</div>\r\n}\r\n\r\nexport default Message;","import { Redirect } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport st from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m =>  <Message text={m.text}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        let messageText = values.newMessageBody; //в объекте values сидят элементы формы, т.е. newMessageBody\r\n        props.sendMessage(messageText);\r\n    }\r\n\r\n    return (\r\n        <div className={st.dialogs}>\r\n            <div className={st.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={st.messages}>\r\n                <div>\r\n                    {messageElements}\r\n                </div>\r\n                <MessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nlet maxLength15 = maxLengthCreator(15);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"newMessageBody\" component={Textarea} \r\n            validate={[required, maxLength15]} placeholder=\"Type your message\"/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({form: 'dialogsNewMessage'})(MessageForm);\r\n\r\nexport default Dialogs;","import {sendMessageActionCreater} from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (messageText) => {\r\n            dispatch(sendMessageActionCreater(messageText));\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}